version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./server_express/src/database/db.sql:/docker-entrypoint-initdb.d/db.sql
    networks:
      server_net:
        ipv4_address: 192.168.102.3

  server:
    build: ./server_express
    depends_on:
      - db
      - firewall
    environment:
      DB_HOST: db
      DB_NAME: mydb
      DB_USER: user
      DB_PASSWORD: password
    ports:
      - "8000:8000"
    volumes:
      - ./server_express/src/logs:/app/logs
    networks:
      - app-network
      - wifi

  client_1:
    build: ./clients/client_1
    depends_on:
      - server
    networks:
      - app-network
    environment:
      HTTP_PROXY:  http://squid:3128
      HTTPS_PROXY: http://squid:3128
  client_2:
    build: ./clients/client_2
    depends_on:
      - server
      - firewall
    container_name: client  
    networks:
      client_net:
        ipv4_address: 192.168.101.2
    cap_add:
      - NET_ADMIN    
    entrypoint: ["/bin/sh", "-c", "ip route replace default via 192.168.101.254 && exec python -u client.py"]
    environment:
      HTTP_PROXY:  http://squid:3128
      HTTPS_PROXY: http://squid:3128
  client_3:
    build: ./clients/client_3
    depends_on:
      - server
    networks:
      - wifi
    environment:
      HTTP_PROXY:  http://squid:3128
      HTTPS_PROXY: http://squid:3128
  client_4:
    build: ./clients/client_4
    depends_on:
      - server
    networks:
      - wifi
    environment:
      HTTP_PROXY:  http://squid:3128
      HTTPS_PROXY: http://squid:3128
  
  snort:
    build: ./snort
    platform: linux/amd64  
    networks:
      client_net:
        ipv4_address: 192.168.101.10
      server_net:
        ipv4_address: 192.168.102.10
      squid_net:
        ipv4_address: 192.168.103.10
    cap_add: [ NET_ADMIN, NET_RAW ]
    command: >
      snort -i any
            -A fast
            -c /etc/snort/snort.conf
            -l /var/log/snort
    volumes:
      - snort-logs:/var/log/snort

  squid:
    platform: linux/amd64
    build: ./squid
    privileged: true
    cap_add:
      - NET_ADMIN
    container_name: squid
    ports: [ "3128:3128" ]
    volumes:
      - ./squid/squid.conf:/etc/squid/squid.conf:ro
      - ./squid/logs:/var/log/squid
    user: "13:13"  
    networks:
      - app-network
      - wifi

  splunk:
    platform: linux/amd64
    image: splunk/splunk:9.4.2        # tag x86-64 disponibile su Docker Hub
    container_name: splunk
    restart: unless-stopped
    ports:
      - "18100:8000"   # GUI
      - "8088:8088"   # HEC (HTTP Event Collector)
      - "8089:8089"   # Management (usato da UF)
      - "9997:9997"   # Splunk Forwarder (usato da UF)
    environment:
      TZ: Europe/Rome
      SPLUNK_START_ARGS: "--accept-license"
      SPLUNK_PASSWORD: Chang3d!
      # abilita HEC automaticamente (facoltativo)
      SPLUNK_HEC_TOKEN:  18750b35-4911-4f0b-8ddb-52e5ea075a26             # ne genera uno
      SPLUNK_HEC_ENABLE: "true"   
      SPLUNK_HEC_PORT: 8088
    # persistenza dei dati Splunk
    volumes:
      - splunk-data:/opt/splunk/var
    networks:
      macvlan_net:
        ipv4_address: 192.168.100.8
  fluentbit:
    image: fluent/fluent-bit:2.1
    container_name: fluentbit
    depends_on:
      - splunk
    volumes:
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - ./squid/logs:/var/log/squid:ro
      - ./server_express/src/logs:/app/logs
      - snort-logs:/var/log/snort:ro
      - /run/ulogd:/run/ulogd:ro 
    networks:
      macvlan_net:
        ipv4_address: 192.168.100.9

volumes:
  db-data:
  splunk-data:
  uf-var:
  snort-logs:

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16
    driver_opts:
      com.docker.network.enable_ipv4: "true"
      com.docker.network.enable_ipv6: "false"
  wifi:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16